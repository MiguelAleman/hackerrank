package algorithms.code_golf.sudoku;import java.util.*;public class Solution_b {static Map<String,Set<Integer>>pV;static int di=0,ui=0,dj=0,uj=0,t;static final Integer[]SV=new Integer[]{1,2,3,4,5,6,7,8,9};static boolean ss(int[][]g){t=0;pV=new HashMap<>();aPV(g);while(t<81){while(fA(g));while(sAp(g));if(!fA(g)&&!sAp(g)){if(!mA(g)&&t<81){return false;}}}pg(g);return true;}static boolean fA(int[][]g){boolean sAdd=false;for(int i=0;i<9;i++){for(int j=0;j<9;j++){Set<Integer>tp=pV.get(i+""+j);if(g[i][j]==0&&tp.size()==1){g[i][j]=tp.toArray(new Integer[tp.size()])[0];uPV(g,i,j,tp.toArray(new Integer[tp.size()])[0]);sAdd=true;t++;}}}return sAdd;}static boolean sAp(int[][]g){boolean sAdd=false;for(int i=0;i<9;i++){for(int j=0;j<9;j++){if(g[i][j]==0){for(Integer e:pV.get(i+""+j)){boolean ea=false;for(int m=0;m<9;m++){if(g[i][m]==0&&m!=j){if(pV.get(i+""+m).contains(e)){break;}}else if(m==8){g[i][j]=e;uPV(g,i,j,e);sAdd=ea=true;t++;continue;}}if(ea)break;for(int m=0;m<9;m++){if(g[m][j]==0&&m!=i){if(pV.get(m+""+j).contains(e)){break;}}else if(m==8){g[i][j]=e;uPV(g,i,j,e);sAdd=ea=true;t++;continue;}}if(ea)break;sL(gBN(i,j));for(int m=di;m<=ui;m++){boolean br=false;for(int n=dj;n<=uj;n++){if(g[m][n]==0&&!(m==i&&n==j)){if(pV.get(m+""+n).contains(e)){br=true;break;}}else if(m==ui&&n==uj){g[i][j]=e;uPV(g,i,j,e);sAdd=ea=true;t++;continue;}}if(br){break;}}if(ea)break;}}}}return sAdd;}static boolean mA(int[][]g){int le=99;int ti=0,tj=0;for(int i=0;i<9;i++){for(int j=0;j<9;j++){if(g[i][j]==0){Set<Integer>set=pV.get(i+""+j);if(set.size()<le&&set.size()!= 0){le=set.size();ti=i;tj=j;}}}}if(le!=99){Random rg=new Random();int r=rg.nextInt(pV.get(ti+""+tj).size());int ct=0;for(Integer e:pV.get(ti+""+tj)){if(ct==r){g[ti][tj]=e;uPV(g,ti,tj,e);t++;return true;}else ct++;}}return false;}static void aPV(int[][]g){for(int i=0;i<9;i++){for(int j=0;j<9;j++){if(g[i][j]==0){Set<Integer>set=new HashSet<>(Arrays.asList(SV));for(int k=0;k<9;k++){if(g[i][k]!=0){if(set.contains(g[i][k])){set.remove(g[i][k]);}}if(g[k][j]!=0){if(set.contains(g[k][j])){set.remove(g[k][j]);}}}sL(gBN(i,j));for(int m=di;m<=ui;m++){for(int n=dj;n<=uj;n++){if(g[m][n]!=0){if(set.contains(g[m][n])){set.remove(g[m][n]);}}}}pV.put(i+""+j,set);}else t++;}}}static void uPV(int[][]g,int i,int j,int k){for(int m=0;m<9;m++){if(g[i][m]==0){Set<Integer>tp=pV.get(i+""+m);if(tp.contains(k)){tp.remove(k);}}if(g[m][j]==0){Set<Integer>tp=pV.get(m+""+j);if(tp.contains(k)){tp.remove(k);}}}sL(gBN(i,j));for(int m=di;m<=ui;m++){for(int n=dj;n<=uj;n++){if(g[m][n]==0){Set<Integer>tp=pV.get(m+""+n);if(tp.contains(k)){tp.remove(k);}}}}}static int gBN(int i,int j){if(i<=2&&j<=2)return 1;else if(i<=2&&j>2&&j<=5 )return 2;else if(i<=2&&j>5&&j<=8)return 3;else if(i>2&&i<=5&&j<=2)return 4;else if(i>2&&i<=5&&j>2&&j<=5)return 5;else if(i>2&&i<=5&&j>5&&j<=8)return 6;else if(i>5&&i<=8&&j<=2)return 7;else if(i>5&&i<=8&&j>2&&j<=5)return 8;else if(i>5&&i<=8&&j>5&&j<=8)return 9;else return 0;}static void sL(int bl){switch(bl){case 1:di=0;ui=2;dj=0;uj=2;break;case 2:di=0;ui=2;dj=3;uj=5;break;case 3:di=0;ui=2;dj=6;uj=8;break;case 4:di=3;ui=5;dj=0;uj=2;break;case 5:di=3;ui=5;dj=3;uj=5;break;case 6:di=3;ui=5;dj=6;uj=8;break;case 7:di=6;ui=8;dj=0;uj=2;break;case 8:di=6;ui=8;dj=3;uj=5;break;case 9:di=6;ui=8;dj=6;uj=8;break;}}static void pg(int[][]g){for(int i=0;i<9;i++){for(int j=0;j<9;j++){if(j==8){System.out.print(g[i][j]);}else{System.out.print(g[i][j]+" ");}}System.out.println("");}}public static void main(String[]args){Scanner in=new Scanner(System.in);int n;int brd[][]=new int[9][9];n=in.nextInt();for(int i=0;i<n;i++){for(int j=0;j<9;j++){for(int k=0;k<9;k++){brd[j][k]=in.nextInt();}}while(!ss(brd));}}}